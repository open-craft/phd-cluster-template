[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "phd"
version = "0.1.0"
description = "PHD helper commands"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "bcrypt>=4.0.0",
    "cookiecutter>=2.6.0",
    "jinja2>=3.1.6",
    "kubernetes>=31.0.0",
    "pydantic>=2.11.9",
    "pydantic-settings>=2.11.0",
    "pyyaml>=6.0.3",
    "requests>=2.32.5",
]

[dependency-groups]
dev = [
    "black>=25.9.0",
    "isort>=6.1.0",
    "pylint>=3.3.8",
    "pytest>=8.4.2",
    "pytest-cov>=6.0.0",
]

[project.scripts]
phd_install_argo = "phd.cli.argo_install:main"
phd_create_cluster = "phd.cli.cluster_create:main"
phd_create_instance = "phd.cli.instance_create:main"
phd_delete_instance = "phd.cli.instance_delete:main"
phd_create_argo_user = "phd.cli.argo_user_create:main"
phd_delete_argo_user = "phd.cli.argo_user_delete:main"
phd_update_argo_user = "phd.cli.argo_user_update:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["phd*"]
exclude = ["tests*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
omit = [
    "phd/cli/*",
    "tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["**/migrations/*"]
known_first_party = ["phd"]
known_third_party = [
    "bcrypt",
    "cookiecutter",
    "jinja2",
    "kubernetes",
    "pydantic",
    "pydantic_settings",
    "pytest",
    "pyyaml",
    "requests",
]
