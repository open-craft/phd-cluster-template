name: Generate Environment Directory

on:
  workflow_call:
    inputs:
      INSTANCE_NAME:
        description: "Instance to create"
        required: true
        type: string
      SERVICE:
        description: "Service to update"
        required: true
        type: string
      IMAGE_TAG:
        description: "Image tag to use for the service"
        required: true
        type: string
      STRAIN_REPOSITORY:
        description: "The repository for strains to checkout. It should follow the format: ORGANIZATION/REPO"
        required: true
        type: string
      STRAIN_REPOSITORY_BRANCH:
        description: "Branch to clone the strain from"
        required: true
        type: string
      TUTOR_VERSION:
        description: "Version of the tutor to use"
        required: true
        type: string
      PICASSO_VERSION:
        description: "Picasso version"
        required: true
        type: string
      PHD_CLI_VERSION:
        description: "PHD cluster template version"
        required: true
        type: string
      RUNNER_WORKFLOW_LABEL:
        description: "The label of the runner workflow to run"
        required: false
        type: string
        default: "ubuntu-latest"
    secrets:
      SSH_PRIVATE_KEY:
        description: "Private SSH key for accessing private repositories"
        required: true

jobs:
  generate-env-dir:
    runs-on: ${{ inputs.RUNNER_WORKFLOW_LABEL }}
    defaults:
      run:
        shell: bash
    env:
      TUTOR_ROOT: ${{ github.workspace }}/strains/instances/${{ inputs.INSTANCE_NAME }}
      TUTOR_PLUGINS_ROOT: ${{ github.workspace }}/strains/instances/${{ inputs.INSTANCE_NAME }}/plugins

    steps:
      - name: Checkout Picasso repository for utility scripts
        uses: actions/checkout@v4
        with:
          repository: open-craft/picasso
          ref: ${{ inputs.PICASSO_VERSION }}
          path: picasso

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: 'pip'
          cache-dependency-path: picasso/requirements/base.txt

      - name: Setup SSH agent for private repositories cloning
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add GitHub to known hosts
        run: |
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Configure git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Install PHD CLI
        run: uv tool install git+https://github.com/open-craft/phd-cluster-template.git@${{ inputs.PHD_CLI_VERSION }}#subdirectory=tooling

      - name: Checkout cluster repository for build configurations
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.STRAIN_REPOSITORY }}
          ref: ${{ inputs.STRAIN_REPOSITORY_BRANCH }}
          fetch-depth: 0
          ssh-key: ${{ inputs.STRAIN_REPOSITORY != github.repository && secrets.SSH_PRIVATE_KEY || '' }}
          path: strains

      - name: Install necessary requirements for workflow scripts
        working-directory: ${{ github.workspace }}
        run: |
          pip install -r picasso/requirements/base.txt

      - name: Get Tutor Configurations from config.yml and set them as an environment variable
        working-directory: ${{ github.workspace }}
        env:
          REQUIRED_KEYS: TUTOR_VERSION
          OPTIONAL_KEYS: DOCKER_REGISTRY
          CONFIG_FILE: strains/instances/${{ inputs.INSTANCE_NAME }}/config.yml
          SCRIPT_PATH: picasso/.github/workflows/scripts/get_tutor_config.py
        run: |
          OPT_ARGS=""
          if [ -n "${OPTIONAL_KEYS}" ]; then
            OPT_ARGS="--optional-keys ${OPTIONAL_KEYS}"
          fi
          ENV_VARS=$(python "$SCRIPT_PATH" --config-file "$CONFIG_FILE" --required-keys $REQUIRED_KEYS $OPT_ARGS)
          echo "$ENV_VARS" >> "$GITHUB_ENV"

      - name: Install Tutor and its dependencies from the version specified in the config.yml
        run: |
          pip install git+https://github.com/overhangio/tutor.git@$TUTOR_VERSION
          tutor config save

      - name: Enable and install picasso plugin in Tutor environment
        run: |
          pip install git+https://github.com/eduNEXT/tutor-contrib-picasso@v0.2.0
          tutor plugins enable picasso

      - name: Execute picasso extra commands
        run: |
          tutor picasso run-extra-commands

      - name: Upload env folder as artifact
        uses: actions/upload-artifact@v4
        with:
          name: tutor-env-${{ inputs.INSTANCE_NAME }}
          path: ${{ github.workspace }}/strains/instances/${{ inputs.INSTANCE_NAME }}/env
